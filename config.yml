name: mock-api
version: 1.0.0
port: 22222
cors:
  - "http://localhost:8080"
  - "http://localhost:3000"
  - "http://localhost:4200"
description: Mock API for testing purposes
endpoints:
  - url: [GET, /ping]
    responses: [["*", 200, { message: "pong" }]]

  - url: [GET, "/user"]
    responses: 
      - 
        - isLoggedIn: true
        - 200
        - id: 1
          username: lucas

  - url: [POST, /auth/login]
    responses:
      - 
        - body:
            username: lucas
            password: "lucas78787"
        - 200
        - access_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoxLCJ1c2VybmFtZSI6Imx1Y2FzIiwicm9sZXMiOlt7Im5hbWUiOiJCQVNJQ19VU0VSIiwicGVybWlzc2lvbnMiOlt7Im5hbWUiOiJzZXNzaW9uOmNyZWF0ZSJ9LHsibmFtZSI6InNlc3Npb246cmVhZCJ9LHsibmFtZSI6InNlc3Npb246dXBkYXRlIn1dfV19LCJleHAiOjE3NTI3MzQ0MjcsImlhdCI6MTY4ODA1ODE4OH0.Ru7EYgFZi0eV4PBdRfdSmcHqQEAQud-HHfigijMdP24
          token_type: bearer
      - ["*", 401, { message: "Invalid credentials" }]
  
  - url: [POST, /session]
    sideEffects:
      - type: create
        entity: session
        data: { id: _AUTONUM_, created: _NOW_ }
    responses: 
      - [{isLoggedIn: true}, 200, {}]

  - url: [GET, "/session/(?P<id>\\d+)"]
    sideEffects:
      - type: retrieve
        entity: session
        data:
          searchBy: id
          searchFrom: params
    responses: 
      - 
        - isLoggedIn: true
          params: 
            id: "\\d+"
        - 200
        - {}

  - url: [POST, "/session/(?P<id>\\d+)/message"]
    sideEffects:
      - type: plugin:chat:append
        entity: session
        property: { key: messages, searchBy: id }
        data: 
          appendTo: messages
          searchFrom: params
          searchBy: id
          model:
            id: _AUTONUM_
            created: _NOW_
            content: _FROM_BODY_:content
    responses: 
      - 
        - isLoggedIn: true
          body: { content: ".*" }
          params: 
            id: "\\d+"
        - 200
        - {}